# -*- coding: utf-8 -*-
"""Copy of Day 33: Project 4: Data Analysis on Olympics Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ljcm56mUGTy4TXd16I1VKQbXgKLWclxy

Dataset

Athlete: https://drive.google.com/file/d/1y6e0eNKfyo9ILqQHszcrRuv3uQhIMm_z/view


NOC: https://drive.google.com/file/d/1_zGhADzXEA9mFHvuCvpllXMCN2DUE2tH/view

# Importing the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re

"""# Reading the dattset"""

athlete = pd.read_csv('/content/drive/MyDrive/ShapeAI DST 11021 Oct-Jan Batch 2021-22/Datasets/athlete_events.csv')
noc = pd.read_csv('/content/drive/MyDrive/ShapeAI DST 11021 Oct-Jan Batch 2021-22/Datasets/noc_regions.csv')

"""# Creating a copy of the DataFrame"""

ath = athlete.copy()
cou = noc.copy()

"""# Data Exploration"""

ath.head()

ath.tail()

ath.shape

cou.head()

cou.shape

ath.info()

cou.info()

ath.isna().sum()

# Find out the ratio of null & not null values in the medal column
x=ath["Medal"].isna().sum()
y=ath["Medal"].notnull().sum()
print(x,":",y)

"""# Data Cleaning & Data Manipulation

* Find all the rows (Datapoints) in the NOC dataframe where region is NaN
"""

cou

cou[cou['region'].isna()]

# Show all the rows from the athlete DataFrame where the region is ROT, TUV & UNK
ath.loc[ath['NOC'].isin(['ROT','TUV','UNK'])]

"""* Add a column "Region" to the ath DataFrame. And the region column should have the region according to the elements in the NOC column of the countries DataFrame."""

ath.columns

cou.columns

region = ath['NOC'].map(cou.set_index('NOC')['region'])

region

ath.insert(7, 'Region', region)

ath.columns

# Delete the NOC column from the ath DataFrame
ath.drop('NOC', axis=1, inplace=True)

ath.head(1)

"""Handling the null values in the columns - Age, Height, Weight (From ath DataFrame)"""

# Find the minimun age
ath.Age.min()

ath.Age.max()

ath.Age.describe()

# Fill all the NaN values with the mean value of the Age column
ath["Age"].fillna(ath.Age.mean(), inplace = True)

ath.Age

ath.Age = ath.Age.astype('int')

ath.Age

ath.info()

ath.Height.describe()

ath.Weight.describe()

ath["Height"].fillna(ath.Height.mean(), inplace = True)
ath["Weight"].fillna(ath.Weight.mean(), inplace = True)

ath.Height = ath.Height.astype('float')
ath.Weight = ath.Weight.astype('float')

ath.info()

"""List out all the values of the region columns where the values are null"""

ath[ath['Region'].isna()]

for i in ath[ath['Region'].isna()]['Team']:
  print(i)

ath_cop = ath.copy()

ath_cop.Region.fillna("Team", inplace=True)

ath.Region.fillna("Team", inplace=True)

ath_cop[ath_cop['Region'].isna()]

ath.info()

"""# Handling the null values in the column "Medals"
"""

ath.head()

ath.Medal.unique()

ath.Medal.nunique()

ath.Medal.value_counts()

# Replace
# NaN -> 0
# Gold -> 1
# Silver -> 2
# Bronze -> 3

ath.Medal.replace([np.nan, 'Gold', 'Silver', 'Bronze'],[0, 1, 2, 3], inplace=True)

ath.Medal

ath.Medal.value_counts()

ath.info()

ath.isnull().sum()

"""Delete some of the unwanted/irrelavant columns"""

ath.head(2)

# Delete the columns - ID, Region, Games
ath.drop(['ID', 'Region', 'Games'], axis=1, inplace=True)

ath.head()

"""Remove the unwanted phrases from the "Event" Column"""

ath[['Sport', 'Event']]

for i,j in zip(ath.Sport, range(len(ath.Event))):
  ath.Event[j] = re.sub(f'^{i}\s', '', ath.Event[j])

ath.head()

ath.shape

ath.duplicated().sum()

ath[ath.duplicated()]

ath.loc[ath['Name']=='Dsir Antoine Acket']

ath.drop_duplicates(inplace=True)

ath.reset_index(inplace=True)

ath.info()

ath.drop('index', axis=1, inplace=True)

ath.head()

"""# Data Exportation"""

# Export to JSON
ath.to_json('olympics_dataset.json')

# Export to Excel
ath.to_excel('olympics_dataset.xlsx')

# Export to JSON
ath.to_csv('olympics_dataset.csv')

!pwd

"""# Data Analysis

1. Show the relationship b/w Height & Weight
"""

plt.scatter(ath.Height, ath.Weight)
plt.xlabel('Height')
plt.ylabel('Weight')
plt.title('Height Vs Weight')

"""2. Name all the cities where the 2012 Olympics was held."""

ath['City'][ath.Year==2012].unique()

"""3. Name all the athletes who has participated in the game 'Judo'"""

ath[['Name','Sport']][ath.Sport=='Judo']